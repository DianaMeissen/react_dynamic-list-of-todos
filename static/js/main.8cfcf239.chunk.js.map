{"version":3,"sources":["user/User.js","toDo/ToDoItem.js","helper/Helper.js","toDo/ToDoList.js","mainApp/App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","ToDoItem","item","Fragment","type","checked","completed","title","user_User","SORT_ORDER_TITLE","SORT_ORDER_COMPLETED","SORT_ORDER_USER","SORT_ORDER_TITLE_BACK","SORT_ORDER_COMPLETED_BACK","SORT_ORDER_USER_BACK","ToDoList","toDoItems","sortBy","sorted","onClick","map","toDo_ToDoItem","key","id","App","state","todos","sortField","getToDosFromServer","fetch","then","res","json","getUsersFromServer","findToDosAndUsers","users","todo","Object","objectSpread","find","userId","sortToDos","_callbackMap","callbackMap","defineProperty","b","localeCompare","callback","_this","sort","sortAndSetField","setState","this","length","toDo_ToDoList","react_md_spinner_esm","React","Component","ReactDOM","render","src_mainApp_App","document","getElementById"],"mappings":"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","file":"static/js/main.8cfcf239.chunk.js","sourcesContent":["import React from \"react\";\n\nconst User = ({ user }) => {\n  return <td className=\"table-border\">{user.name}</td>;\n};\n\nexport default User;\n","import React from \"react\";\nimport User from \"../user/User\";\n\nconst ToDoItem = ({ item }) => {\n  return (\n    <>\n      <td className=\"table-border\">\n        <input type=\"checkbox\" checked={item.completed} />\n      </td>\n\n      <td className=\"table-border\">{item.title}</td>\n      <User user={item.user} />\n    </>\n  );\n};\n\nexport default ToDoItem;\n","export const SORT_ORDER_TITLE = \"title\";\nexport const SORT_ORDER_COMPLETED = \"completed\";\nexport const SORT_ORDER_USER = \"user\";\nexport const SORT_ORDER_TITLE_BACK = \"title_back\";\nexport const SORT_ORDER_COMPLETED_BACK = \"completed_back\";\nexport const SORT_ORDER_USER_BACK = \"user_back\";\n","import React from \"react\";\n\nimport ToDoItem from \"../toDo/ToDoItem\";\nimport {\n  SORT_ORDER_TITLE,\n  SORT_ORDER_COMPLETED,\n  SORT_ORDER_USER,\n  SORT_ORDER_TITLE_BACK,\n  SORT_ORDER_COMPLETED_BACK,\n  SORT_ORDER_USER_BACK\n} from \"../helper/Helper\";\nimport \"../toDo/TableStyle.css\";\n\nconst ToDoList = ({ toDoItems, sortBy, sorted }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th\n            onClick={() =>\n              sortBy(\n                sorted === SORT_ORDER_COMPLETED\n                  ? SORT_ORDER_COMPLETED_BACK\n                  : SORT_ORDER_COMPLETED\n              )\n            }\n            className=\"table-border pointer\"\n          >\n            Is completed\n          </th>\n          <th\n            onClick={() =>\n              sortBy(\n                sorted === SORT_ORDER_TITLE\n                  ? SORT_ORDER_TITLE_BACK\n                  : SORT_ORDER_TITLE\n              )\n            }\n            className=\"table-border pointer\"\n          >\n            ToDo item\n          </th>\n          <th\n            onClick={() =>\n              sortBy(\n                sorted === SORT_ORDER_USER\n                  ? SORT_ORDER_USER_BACK\n                  : SORT_ORDER_USER\n              )\n            }\n            className=\"table-border pointer\"\n          >\n            User\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {toDoItems.map(item => {\n          return (\n            <tr>\n              <ToDoItem key={item.id} item={item} />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\n\nimport ToDoList from \"../toDo/ToDoList\";\nimport {\n  SORT_ORDER_TITLE,\n  SORT_ORDER_COMPLETED,\n  SORT_ORDER_USER,\n  SORT_ORDER_TITLE_BACK,\n  SORT_ORDER_COMPLETED_BACK,\n  SORT_ORDER_USER_BACK\n} from \"../helper/Helper\";\nimport \"../mainApp/App.css\";\nimport MDSpinner from \"react-md-spinner\";\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortField: \"user\"\n  };\n\n  async componentDidMount() {\n    const todo = await this.getToDosFromServer();\n    const user = await this.getUsersFromServer();\n    this.setState({\n      todos: this.findToDosAndUsers(todo, user)\n    });\n  }\n\n  getToDosFromServer = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res =>\n      res.json()\n    );\n  };\n\n  getUsersFromServer = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/users\").then(res =>\n      res.json()\n    );\n  };\n\n  findToDosAndUsers = (todos, users) => {\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId)\n    }));\n  };\n\n  sortToDos = sortField => {\n    const callbackMap = {\n      [SORT_ORDER_TITLE]: (a, b) => a.title.localeCompare(b.title),\n      [SORT_ORDER_USER]: (a, b) => a.user.name.localeCompare(b.user.name),\n      [SORT_ORDER_COMPLETED]: (a, b) => a.completed - b.completed,\n      [SORT_ORDER_TITLE_BACK]: (a, b) => b.title.localeCompare(a.title),\n      [SORT_ORDER_USER_BACK]: (a, b) => b.user.name.localeCompare(a.user.name),\n      [SORT_ORDER_COMPLETED_BACK]: (a, b) => b.completed - a.completed\n    };\n\n    const callback = callbackMap[sortField] || callbackMap.SORT_ORDER_TITLE;\n\n    return this.state.todos.sort(callback);\n  };\n\n  sortAndSetField = sortField => {\n    this.setState({ sortField, todos: this.sortToDos(sortField) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Static list of todos</h1>\n        {this.state.todos.length > 0 ? (\n          <ToDoList\n            sortBy={this.sortAndSetField}\n            sorted={this.state.sortField}\n            toDoItems={this.state.todos}\n          />\n        ) : (\n          <MDSpinner />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./mainApp/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}