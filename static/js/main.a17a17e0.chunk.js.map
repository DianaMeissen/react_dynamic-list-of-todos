{"version":3,"sources":["toDo/ToDoItem.js","user/User.js","helper/Helper.js","toDo/ToDoList.js","mainApp/App.js","index.js"],"names":["ToDoItem","_ref","item","react_default","a","createElement","Fragment","className","type","checked","completed","title","User","user","name","SORT_ORDER_TITLE","SORT_ORDER_COMPLETED","SORT_ORDER_USER","ToDoList","toDoItems","sortBy","onClick","map","toDo_ToDoItem","key","id","user_User","App","state","todos","sortField","getToDosFromServer","fetch","then","res","json","getUsersFromServer","findToDosAndUsers","users","todo","Object","objectSpread","find","userId","sortToDos","_callbackMap","callbackMap","defineProperty","b","localeCompare","callback","_this","sort","sortAndSetField","setState","this","length","toDo_ToDoList","react_md_spinner_esm","React","Component","ReactDOM","render","src_mainApp_App","document","getElementById"],"mappings":"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","file":"static/js/main.a17a17e0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ToDoItem = ({ item }) => {\n  return (\n    <>\n      <td className=\"table-border\">\n        <input type=\"checkbox\" checked={item.completed} />\n      </td>\n\n      <td className=\"table-border\">{item.title}</td>\n    </>\n  );\n};\n\nexport default ToDoItem;\n","import React from \"react\";\n\nconst User = ({ user }) => {\n  return <td className=\"table-border\">{user.name}</td>;\n};\n\nexport default User;\n","export const SORT_ORDER_TITLE = \"title\";\nexport const SORT_ORDER_COMPLETED = \"completed\";\nexport const SORT_ORDER_USER = \"user\";\n","import React from \"react\";\n\nimport ToDoItem from \"../toDo/ToDoItem\";\nimport User from \"../user/User\";\nimport {\n  SORT_ORDER_TITLE,\n  SORT_ORDER_COMPLETED,\n  SORT_ORDER_USER\n} from \"../helper/Helper\";\nimport \"../toDo/TableStyle.css\";\n\nconst ToDoList = ({ toDoItems, sortBy }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th\n            onClick={() => {\n              sortBy(SORT_ORDER_COMPLETED);\n            }}\n            className=\"table-border pointer\"\n          >\n            Is completed\n          </th>\n          <th\n            onClick={() => {\n              sortBy(SORT_ORDER_TITLE);\n            }}\n            className=\"table-border pointer\"\n          >\n            ToDo item\n          </th>\n          <th\n            onClick={() => {\n              sortBy(SORT_ORDER_USER);\n            }}\n            className=\"table-border pointer\"\n          >\n            User\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {toDoItems.map(item => {\n          return (\n            <tr>\n              <ToDoItem key={item.id} item={item} />\n              <User user={item.user} />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\n\nimport ToDoList from \"../toDo/ToDoList\";\nimport {\n  SORT_ORDER_TITLE,\n  SORT_ORDER_COMPLETED,\n  SORT_ORDER_USER\n} from \"../helper/Helper\";\nimport \"../mainApp/App.css\";\nimport MDSpinner from \"react-md-spinner\";\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortField: \"user\"\n  };\n\n  async componentDidMount() {\n    const todo = await this.getToDosFromServer();\n    const user = await this.getUsersFromServer();\n    this.setState({\n      todos: this.findToDosAndUsers(todo, user)\n    });\n  }\n\n  getToDosFromServer = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/todos\").then(res =>\n      res.json()\n    );\n  };\n\n  getUsersFromServer = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/users\").then(res =>\n      res.json()\n    );\n  };\n\n  findToDosAndUsers = (todos, users) => {\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId)\n    }));\n  };\n\n  sortToDos = sortField => {\n    const callbackMap = {\n      [SORT_ORDER_TITLE]: (a, b) => a.title.localeCompare(b.title),\n      [SORT_ORDER_USER]: (a, b) => a.user.name.localeCompare(b.user.name),\n      [SORT_ORDER_COMPLETED]: (a, b) => a.completed - b.completed\n    };\n\n    const callback = callbackMap[sortField] || callbackMap.title;\n\n    return this.state.todos.sort(callback);\n  };\n\n  sortAndSetField = sortField => {\n    this.setState({ sortField }, () => {\n      this.setState({ todos: this.sortToDos(sortField) });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Static list of todos</h1>\n        {this.state.todos.length > 0 ? (\n          <ToDoList\n            sortBy={this.sortAndSetField}\n            toDoItems={this.state.todos}\n          />\n        ) : (\n          <MDSpinner />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./mainApp/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}